{"version":3,"file":"static/js/888.2dff16dd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/api/movieAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__nL6Ik\",\"navbar\":\"MovieDetails_navbar__XxA1n\"};","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link, Outlet } from 'react-router-dom';\r\nimport { fetchMovieDetails } from '../api/movieAPI';\r\nimport styles from './MovieDetails.module.css';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetails(movieId).then(setMovie);\r\n  }, [movieId]);\r\n\r\n  if (!movie) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <nav className={styles.navbar}>\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/movies\">Movies</Link>\r\n      </nav>\r\n      <h1>{movie.title}</h1>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\r\n        alt={movie.title}\r\n      />\r\n      <p>\r\n        <strong>User Score:</strong> {movie.vote_average * 10}%\r\n      </p>\r\n      <p>\r\n        <strong>Overview:</strong> {movie.overview}\r\n      </p>\r\n      <p>\r\n        <strong>Genres:</strong>{' '}\r\n        {movie.genres.map(genre => genre.name).join(', ')}\r\n      </p>\r\n      <h2>Additional Informations</h2>\r\n      <div>\r\n        <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\r\n        <Link to={`/movies/${movieId}/cast`}>Cast</Link>\r\n      </div>\r\n      <Outlet /> {/* Miejsce na renderowanie komponentów Cast i Reviews */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","const API_KEY = '0dbe1ca7342e7e9210eecd0a9bce9cbe';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\n/**\r\n * Wykonuje zapytanie do TheMovieDB API.\r\n * @param {string} endpoint - The endpoint to call.\r\n * @param {Object} params - Additional query parameters.\r\n * @returns {Promise} - Promise with the response data.\r\n */\r\nconst fetchFromTMDB = async (endpoint, params = {}) => {\r\n  // Dodawanie klucza API do parametrów zapytania\r\n  params['api_key'] = API_KEY;\r\n\r\n  // Tworzenie stringa z parametrów zapytania\r\n  const queryParams = new URLSearchParams(params).toString();\r\n\r\n  const url = `${BASE_URL}${endpoint}?${queryParams}`;\r\n  const response = await fetch(url);\r\n  if (!response.ok) {\r\n    throw new Error(`TMDB API request failed: ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n/**\r\n * Pobiera filmy z trendów.\r\n * @returns {Promise} - Promise with trending movies.\r\n */\r\nexport const fetchTrendingMovies = () => {\r\n  return fetchFromTMDB('/trending/movie/day');\r\n};\r\n\r\n/**\r\n * Wyszukuje filmy na podstawie zapytania.\r\n * @param {string} query - Query string for the movie search.\r\n * @returns {Promise} - Promise with the search results.\r\n */\r\nexport const searchMovies = query => {\r\n  return fetchFromTMDB('/search/movie', { query: encodeURIComponent(query) });\r\n};\r\n\r\n/**\r\n * Pobiera szczegółowe informacje o filmie.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie details.\r\n */\r\nexport const fetchMovieDetails = movieId => {\r\n  return fetchFromTMDB(`/movie/${movieId}`);\r\n};\r\n\r\n/**\r\n * Pobiera informacje o obsadzie filmu.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie cast info.\r\n */\r\nexport const fetchMovieCast = movieId => {\r\n  return fetchFromTMDB(`/movie/${movieId}/credits`);\r\n};\r\n\r\n/**\r\n * Pobiera recenzje filmu.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie reviews.\r\n */\r\nexport const fetchMovieReviews = movieId => {\r\n  return fetchFromTMDB(`/movie/${movieId}/reviews`);\r\n};\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","fetchMovieDetails","then","_jsxs","className","styles","children","_jsx","Link","to","title","src","concat","poster_path","alt","vote_average","overview","genres","map","genre","name","join","Outlet","API_KEY","BASE_URL","fetchFromTMDB","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","params","queryParams","url","response","_args","arguments","_context","prev","next","length","undefined","URLSearchParams","toString","fetch","sent","ok","Error","status","abrupt","json","stop","_x","apply","fetchTrendingMovies","searchMovies","query","encodeURIComponent","fetchMovieCast","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","fn","self","this","args","err"],"sourceRoot":""}