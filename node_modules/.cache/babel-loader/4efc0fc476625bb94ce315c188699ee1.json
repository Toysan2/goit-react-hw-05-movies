{"ast":null,"code":"var _jsxFileName = \"E:\\\\GoIT\\\\Zad dom\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Cast\\\\Cast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchMovieCast } from '../api/movieAPI';\nimport PropTypes from 'prop-types';\nimport styles from './Cast.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cast = _ref => {\n  _s();\n  let {\n    movieId\n  } = _ref;\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchMovieCast(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: cast.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: member.name\n    }, member.cast_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Cast, \"AdIVhaH7Hx6re/u/3OnvwdzRW0I=\");\n_c = Cast;\nCast.propTypes = {\n  movieId: PropTypes.number.isRequired\n};\nexport default Cast;\nvar _c;\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"names":["React","useEffect","useState","fetchMovieCast","PropTypes","styles","jsxDEV","_jsxDEV","Cast","_ref","_s","movieId","cast","setCast","then","data","className","container","children","map","member","name","cast_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","isRequired","$RefreshReg$"],"sources":["E:/GoIT/Zad dom/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchMovieCast } from '../api/movieAPI';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Cast.module.css';\r\n\r\nconst Cast = ({ movieId }) => {\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMovieCast(movieId).then(data => setCast(data.cast));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {cast.map(member => (\r\n        <div key={member.cast_id}>{member.name}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nCast.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Cast;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACvB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdE,cAAc,CAACQ,OAAO,CAAC,CAACG,IAAI,CAACC,IAAI,IAAIF,OAAO,CAACE,IAAI,CAACH,IAAI,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEb,oBACEJ,OAAA;IAAKS,SAAS,EAAEX,MAAM,CAACY,SAAU;IAAAC,QAAA,EAC9BN,IAAI,CAACO,GAAG,CAACC,MAAM,iBACdb,OAAA;MAAAW,QAAA,EAA2BE,MAAM,CAACC;IAAI,GAA5BD,MAAM,CAACE,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAdIF,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAgBVA,IAAI,CAACoB,SAAS,GAAG;EACfjB,OAAO,EAAEP,SAAS,CAACyB,MAAM,CAACC;AAC5B,CAAC;AAED,eAAetB,IAAI;AAAC,IAAAmB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module"}