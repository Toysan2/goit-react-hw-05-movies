{"ast":null,"code":"import _asyncToGenerator from\"E:/GoIT/Zad dom/goit-react-hw-05-movies/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"E:\\\\GoIT\\\\Zad dom\\\\goit-react-hw-05-movies\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";var API_KEY='0dbe1ca7342e7e9210eecd0a9bce9cbe';var BASE_URL='https://api.themoviedb.org/3';/**\r\n * Wykonuje zapytanie do TheMovieDB API.\r\n * @param {string} endpoint - The endpoint to call.\r\n * @returns {Promise} - Promise with the response data.\r\n */var fetchFromTMDB=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint){var url,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"\".concat(BASE_URL).concat(endpoint,\"?api_key=\").concat(API_KEY);_context.next=3;return fetch(url);case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error(\"TMDB API request failed: \".concat(response.status));case 6:return _context.abrupt(\"return\",response.json());case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchFromTMDB(_x){return _ref.apply(this,arguments);};}();/**\r\n * Pobiera filmy z trendów.\r\n * @returns {Promise} - Promise with trending movies.\r\n */export var fetchTrendingMovies=function fetchTrendingMovies(){return fetchFromTMDB('/trending/movie/day');};/**\r\n * Wyszukuje filmy na podstawie zapytania.\r\n * @param {string} query - Query string for the movie search.\r\n * @returns {Promise} - Promise with the search results.\r\n */export var searchMovies=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",fetchFromTMDB(\"/search/movie?query=\".concat(encodeURIComponent(query))));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function searchMovies(_x2){return _ref2.apply(this,arguments);};}();/**\r\n * Pobiera szczegółowe informacje o filmie.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie details.\r\n */export var fetchMovieDetails=function fetchMovieDetails(movieId){return fetchFromTMDB(\"/movie/\".concat(movieId));};/**\r\n * Pobiera informacje o obsadzie filmu.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie cast info.\r\n */export var fetchMovieCast=function fetchMovieCast(movieId){return fetchFromTMDB(\"/movie/\".concat(movieId,\"/credits\"));};/**\r\n * Pobiera recenzje filmu.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie reviews.\r\n */export var fetchMovieReviews=function fetchMovieReviews(movieId){return fetchFromTMDB(\"/movie/\".concat(movieId,\"/reviews\"));};","map":{"version":3,"names":["API_KEY","BASE_URL","fetchFromTMDB","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","url","response","wrap","_callee$","_context","prev","next","concat","fetch","sent","ok","Error","status","abrupt","json","stop","_x","apply","arguments","fetchTrendingMovies","searchMovies","_ref2","_callee2","query","_callee2$","_context2","encodeURIComponent","_x2","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sources":["E:/GoIT/Zad dom/goit-react-hw-05-movies/src/components/api/movieAPI.jsx"],"sourcesContent":["const API_KEY = '0dbe1ca7342e7e9210eecd0a9bce9cbe';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\n/**\r\n * Wykonuje zapytanie do TheMovieDB API.\r\n * @param {string} endpoint - The endpoint to call.\r\n * @returns {Promise} - Promise with the response data.\r\n */\r\nconst fetchFromTMDB = async endpoint => {\r\n  const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\r\n  const response = await fetch(url);\r\n  if (!response.ok) {\r\n    throw new Error(`TMDB API request failed: ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n/**\r\n * Pobiera filmy z trendów.\r\n * @returns {Promise} - Promise with trending movies.\r\n */\r\nexport const fetchTrendingMovies = () => {\r\n  return fetchFromTMDB('/trending/movie/day');\r\n};\r\n\r\n/**\r\n * Wyszukuje filmy na podstawie zapytania.\r\n * @param {string} query - Query string for the movie search.\r\n * @returns {Promise} - Promise with the search results.\r\n */\r\nexport const searchMovies = async query => {\r\n  return fetchFromTMDB(`/search/movie?query=${encodeURIComponent(query)}`);\r\n};\r\n\r\n/**\r\n * Pobiera szczegółowe informacje o filmie.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie details.\r\n */\r\nexport const fetchMovieDetails = movieId => {\r\n  return fetchFromTMDB(`/movie/${movieId}`);\r\n};\r\n\r\n/**\r\n * Pobiera informacje o obsadzie filmu.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie cast info.\r\n */\r\nexport const fetchMovieCast = movieId => {\r\n  return fetchFromTMDB(`/movie/${movieId}/credits`);\r\n};\r\n\r\n/**\r\n * Pobiera recenzje filmu.\r\n * @param {number} movieId - The ID of the movie.\r\n * @returns {Promise} - Promise with movie reviews.\r\n */\r\nexport const fetchMovieReviews = movieId => {\r\n  return fetchFromTMDB(`/movie/${movieId}/reviews`);\r\n};\r\n"],"mappings":"qQAAA,GAAM,CAAAA,OAAO,CAAG,kCAAkC,CAClD,GAAM,CAAAC,QAAQ,CAAG,8BAA8B,CAE/C;AACA;AACA;AACA;AACA,GACA,GAAM,CAAAC,aAAa,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAC,QAAMC,QAAQ,MAAAC,GAAA,CAAAC,QAAA,QAAAL,mBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA,kBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAC5BN,GAAG,IAAAO,MAAA,CAAMf,QAAQ,EAAAe,MAAA,CAAGR,QAAQ,cAAAQ,MAAA,CAAYhB,OAAO,EAAAa,QAAA,CAAAE,IAAA,SAC9B,CAAAE,KAAK,CAACR,GAAG,CAAC,QAA3BC,QAAQ,CAAAG,QAAA,CAAAK,IAAA,IACTR,QAAQ,CAACS,EAAE,EAAAN,QAAA,CAAAE,IAAA,eACR,IAAI,CAAAK,KAAK,6BAAAJ,MAAA,CAA6BN,QAAQ,CAACW,MAAM,CAAE,CAAC,eAAAR,QAAA,CAAAS,MAAA,UAEzDZ,QAAQ,CAACa,IAAI,CAAC,CAAC,0BAAAV,QAAA,CAAAW,IAAA,OAAAjB,OAAA,GACvB,kBAPK,CAAAL,aAAaA,CAAAuB,EAAA,SAAAtB,IAAA,CAAAuB,KAAA,MAAAC,SAAA,OAOlB,CAED;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAA,CAAS,CACvC,MAAO,CAAA1B,aAAa,CAAC,qBAAqB,CAAC,CAC7C,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAA2B,YAAY,6BAAAC,KAAA,CAAA1B,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAyB,SAAMC,KAAK,SAAA3B,mBAAA,CAAAM,IAAA,UAAAsB,UAAAC,SAAA,kBAAAA,SAAA,CAAApB,IAAA,CAAAoB,SAAA,CAAAnB,IAAA,gBAAAmB,SAAA,CAAAZ,MAAA,UAC9BpB,aAAa,wBAAAc,MAAA,CAAwBmB,kBAAkB,CAACH,KAAK,CAAC,CAAE,CAAC,0BAAAE,SAAA,CAAAV,IAAA,OAAAO,QAAA,GACzE,kBAFY,CAAAF,YAAYA,CAAAO,GAAA,SAAAN,KAAA,CAAAJ,KAAA,MAAAC,SAAA,OAExB,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAU,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAGC,OAAO,CAAI,CAC1C,MAAO,CAAApC,aAAa,WAAAc,MAAA,CAAWsB,OAAO,CAAE,CAAC,CAC3C,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAGD,OAAO,CAAI,CACvC,MAAO,CAAApC,aAAa,WAAAc,MAAA,CAAWsB,OAAO,YAAU,CAAC,CACnD,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAE,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAGF,OAAO,CAAI,CAC1C,MAAO,CAAApC,aAAa,WAAAc,MAAA,CAAWsB,OAAO,YAAU,CAAC,CACnD,CAAC"},"metadata":{},"sourceType":"module"}