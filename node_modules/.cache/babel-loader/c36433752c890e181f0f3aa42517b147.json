{"ast":null,"code":"// movieService.js\nconst API_KEY = '0dbe1ca7342e7e9210eecd0a9bce9cbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Funkcja do pobierania trendujących filmów\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\n// Funkcja do wyszukiwania filmów\nexport const searchMovies = async query => {\n  try {\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(query)}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\n// Funkcja do pobierania szczegółów filmu\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\n// Funkcja do pobierania obsady filmu\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\n// Funkcja do pobierania recenzji filmu\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_KEY","BASE_URL","getTrendingMovies","response","fetch","ok","Error","json","error","console","searchMovies","query","encodeURIComponent","getMovieDetails","movieId","getMovieCast","getMovieReviews"],"sources":["E:/GoIT/Zad dom/goit-react-hw-05-movies/src/components/services/movieService.jsx"],"sourcesContent":["// movieService.js\r\nconst API_KEY = '0dbe1ca7342e7e9210eecd0a9bce9cbe';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\n// Funkcja do pobierania trendujących filmów\r\nexport const getTrendingMovies = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching trending movies:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funkcja do wyszukiwania filmów\r\nexport const searchMovies = async (query) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(query)}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error searching movies:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funkcja do pobierania szczegółów filmu\r\nexport const getMovieDetails = async (movieId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching movie details:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funkcja do pobierania obsady filmu\r\nexport const getMovieCast = async (movieId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching movie cast:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Funkcja do pobierania recenzji filmu\r\nexport const getMovieReviews = async (movieId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching movie reviews:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,8BAA8B;;AAE/C;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,+BAA8BD,OAAQ,EAAC,CAAC;IACjF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,yBAAwBD,OAAQ,UAASY,kBAAkB,CAACD,KAAK,CAAE,EAAC,CAAC;IAC9G,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,UAASa,OAAQ,YAAWd,OAAQ,EAAC,CAAC;IAC/E,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,YAAY,GAAG,MAAOD,OAAO,IAAK;EAC7C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,UAASa,OAAQ,oBAAmBd,OAAQ,EAAC,CAAC;IACvF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,eAAe,GAAG,MAAOF,OAAO,IAAK;EAChD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,UAASa,OAAQ,oBAAmBd,OAAQ,EAAC,CAAC;IACvF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module"}